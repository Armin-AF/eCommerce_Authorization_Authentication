// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using strore.server.DataBase;

#nullable disable

namespace strore.server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("strore.server.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("StoreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "31d18cde-9ad0-4887-887d-4e179689d82e",
                            Category = "category1",
                            Description = "product1 description",
                            ImageUrl = "https://picsum.photos/200/300",
                            Price = 10m,
                            Quantity = 10,
                            StoreId = "f6b6b6b6-6b6b-6b6b-6b6b-6b6b6b6b6b6b",
                            Title = "product1"
                        },
                        new
                        {
                            Id = "ec0c2b37-77f0-4022-a100-ea9b9ca3b536",
                            Category = "category1",
                            Description = "product2 description",
                            ImageUrl = "https://picsum.photos/200/300",
                            Price = 20m,
                            Quantity = 20,
                            StoreId = "f7b7b7b7-7b7b-7b7b-7b7b-7b7b7b7b7b7b",
                            Title = "product2"
                        },
                        new
                        {
                            Id = "73c1290a-6732-4c7f-b816-d8c54aaec1e2",
                            Category = "category1",
                            Description = "product3 description",
                            ImageUrl = "https://picsum.photos/200/300",
                            Price = 30m,
                            Quantity = 30,
                            StoreId = "f8b8b8b8-8b8b-8b8b-8b8b-8b8b8b8b8b8b",
                            Title = "product3"
                        });
                });

            modelBuilder.Entity("strore.server.Models.Store", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = "f6b6b6b6-6b6b-6b6b-6b6b-6b6b6b6b6b6b",
                            AdminId = "f5b5b5b5-5b5b-5b5b-5b5b-5b5b5b5b5b5b",
                            Name = "store1"
                        },
                        new
                        {
                            Id = "f7b7b7b7-7b7b-7b7b-7b7b-7b7b7b7b7b7b",
                            AdminId = "f5b5b5b5-5b5b-5b5b-5b5b-5b5b5b5b5b5b",
                            Name = "store2"
                        },
                        new
                        {
                            Id = "f8b8b8b8-8b8b-8b8b-8b8b-8b8b8b8b8b8b",
                            AdminId = "f5b5b5b5-5b5b-5b5b-5b5b-5b5b5b5b5b5b",
                            Name = "store3"
                        });
                });

            modelBuilder.Entity("strore.server.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "1c1e71fb-4d7f-4fa6-915b-631ce8cea395",
                            Email = "user1@email.com",
                            Password = "123456",
                            Role = "user",
                            StoreId = "store1",
                            UserName = "user1"
                        },
                        new
                        {
                            Id = "92a23f0c-df01-441a-98af-f23132d85e98",
                            Email = "user2@email.com",
                            Password = "123456",
                            Role = "user",
                            StoreId = "store2",
                            UserName = "user2"
                        },
                        new
                        {
                            Id = "f5b5b5b5-5b5b-5b5b-5b5b-5b5b5b5b5b5b",
                            Email = "admin@email.com",
                            Password = "123456",
                            Role = "admin",
                            StoreId = "store1",
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
